import { Request, Response } from 'express';
import { notificationService } from 'typescript/notificationService';
import { CreateNotificationDto, NotificationType } from 'typescript/notification';

export class NotificationController {
  static sendNotification: any;
    static getUserNotifications: any;
  async createNotification(req: Request, res: Response): Promise<void> {
    try {
      const notificationData: CreateNotificationDto = {
        userId: req.body.userId,
        type: req.body.type,
        title: req.body.title,
        content: req.body.content,
        metadata: req.body.metadata
      };

      const notification = await notificationService.createNotification(notificationData);
      res.status(201).json(notification);
    } catch (error) {
      console.error('[NotificationController] Error creating notification:', error);
      res.status(500).json({ message: 'Failed to create notification', error: (error as Error).message });
    }
  }

  async getUserNotifications(req: Request, res: Response): Promise<void> {
    try {
      const userId = req.params.userId;
      const notifications = await notificationService.getUserNotifications(userId);
      res.status(200).json(notifications);
    } catch (error) {
      console.error('[NotificationController] Error getting notifications:', error);
      res.status(500).json({ message: 'Failed to get notifications', error: (error as Error).message });
    }
  }
}